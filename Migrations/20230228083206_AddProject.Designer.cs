// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnetproject;

#nullable disable

namespace dotnetproject.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20230228083206_AddProject")]
    partial class AddProject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("dotnetproject.Models.Issue", b =>
                {
                    b.Property<int>("IssueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Assigneeuserid")
                        .HasColumnType("int");

                    b.Property<string>("IssueDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IssueTittle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IssueType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Reporteruserid")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("projectId")
                        .HasColumnType("int");

                    b.HasKey("IssueId");

                    b.HasIndex("Assigneeuserid");

                    b.HasIndex("Reporteruserid");

                    b.HasIndex("projectId");

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("dotnetproject.Models.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("LabelName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("labels");
                });

            modelBuilder.Entity("dotnetproject.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Creatoruserid")
                        .HasColumnType("int");

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ProjectId");

                    b.HasIndex("Creatoruserid");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("dotnetproject.Models.Roles", b =>
                {
                    b.Property<int>("roleid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("roleid");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("dotnetproject.Models.User", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("userid");

                    b.ToTable("user");
                });

            modelBuilder.Entity("IssueLabel", b =>
                {
                    b.Property<int>("IssuesIssueId")
                        .HasColumnType("int");

                    b.Property<int>("LabelsId")
                        .HasColumnType("int");

                    b.HasKey("IssuesIssueId", "LabelsId");

                    b.HasIndex("LabelsId");

                    b.ToTable("IssueLabel");
                });

            modelBuilder.Entity("RolesUser", b =>
                {
                    b.Property<int>("Rolesroleid")
                        .HasColumnType("int");

                    b.Property<int>("Usersuserid")
                        .HasColumnType("int");

                    b.HasKey("Rolesroleid", "Usersuserid");

                    b.HasIndex("Usersuserid");

                    b.ToTable("RolesUser");
                });

            modelBuilder.Entity("dotnetproject.Models.Issue", b =>
                {
                    b.HasOne("dotnetproject.Models.User", "Assignee")
                        .WithMany("IssuesAssigned")
                        .HasForeignKey("Assigneeuserid");

                    b.HasOne("dotnetproject.Models.User", "Reporter")
                        .WithMany("IssuesCreated")
                        .HasForeignKey("Reporteruserid");

                    b.HasOne("dotnetproject.Models.Project", "project")
                        .WithMany("issues")
                        .HasForeignKey("projectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("Reporter");

                    b.Navigation("project");
                });

            modelBuilder.Entity("dotnetproject.Models.Project", b =>
                {
                    b.HasOne("dotnetproject.Models.User", "Creator")
                        .WithMany("Projects")
                        .HasForeignKey("Creatoruserid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("IssueLabel", b =>
                {
                    b.HasOne("dotnetproject.Models.Issue", null)
                        .WithMany()
                        .HasForeignKey("IssuesIssueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnetproject.Models.Label", null)
                        .WithMany()
                        .HasForeignKey("LabelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RolesUser", b =>
                {
                    b.HasOne("dotnetproject.Models.Roles", null)
                        .WithMany()
                        .HasForeignKey("Rolesroleid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnetproject.Models.User", null)
                        .WithMany()
                        .HasForeignKey("Usersuserid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnetproject.Models.Project", b =>
                {
                    b.Navigation("issues");
                });

            modelBuilder.Entity("dotnetproject.Models.User", b =>
                {
                    b.Navigation("IssuesAssigned");

                    b.Navigation("IssuesCreated");

                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
